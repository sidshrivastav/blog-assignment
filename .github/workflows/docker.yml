name: Build and Push Docker Image

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install standard-version
        run: npm install -g standard-version

      - name: Configure Git user
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Bump version and create tag (dry run check)
        id: bump
        run: |
          git fetch --tags
          # Run standard-version and create tag if changes are found
          VERSION_BUMP=$(standard-version --dry-run | grep "tagging release" | awk '{print $NF}' || echo "")
          if [ -n "$VERSION_BUMP" ]; then
            echo "Performing version bump to $VERSION_BUMP"
            standard-version
            git push --follow-tags origin main
          else
            echo "No new version bump detected"
          fi

      - name: Extract version from latest tag
        id: get_version
        run: |
          VERSION=$(git describe --tags --abbrev=0 | sed 's/^v//')
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/your-image-name:${{ steps.get_version.outputs.version }}
            ghcr.io/${{ secrets.GHCR_USERNAME }}/your-image-name:${{ steps.get_version.outputs.version }}
